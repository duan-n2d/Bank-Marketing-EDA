{"metadata":{"kernelspec":{"name":"python3","display_name":"Python 3","language":"python"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":1570881,"sourceType":"datasetVersion","datasetId":223954}],"dockerImageVersionId":30684,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"source":"<a href=\"https://www.kaggle.com/code/dunnguynduy/bank-marketing-eda?scriptVersionId=189371484\" target=\"_blank\"><img align=\"left\" alt=\"Kaggle\" title=\"Open in Kaggle\" src=\"https://kaggle.com/static/images/open-in-kaggle.svg\"></a>","metadata":{},"cell_type":"markdown"},{"cell_type":"markdown","source":"<h1>Bank dataset EDA</h1>","metadata":{}},{"cell_type":"markdown","source":"<h2> Import Python Libraries </h2>","metadata":{}},{"cell_type":"code","source":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport seaborn as sns\n\nimport warnings\nwarnings.filterwarnings('ignore')","metadata":{"execution":{"iopub.status.busy":"2024-07-23T00:39:27.564626Z","iopub.execute_input":"2024-07-23T00:39:27.565132Z","iopub.status.idle":"2024-07-23T00:39:27.571669Z","shell.execute_reply.started":"2024-07-23T00:39:27.565082Z","shell.execute_reply":"2024-07-23T00:39:27.57017Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"<h2> Reading Dataset </h2>","metadata":{}},{"cell_type":"code","source":"df = pd.read_csv('/kaggle/input/banking-dataset-marketing-targets/train.csv' , sep=\";\")\ndf","metadata":{"execution":{"iopub.status.busy":"2024-07-23T00:39:27.589951Z","iopub.execute_input":"2024-07-23T00:39:27.59044Z","iopub.status.idle":"2024-07-23T00:39:27.728138Z","shell.execute_reply.started":"2024-07-23T00:39:27.590403Z","shell.execute_reply":"2024-07-23T00:39:27.726731Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"- There are 45211 observations and 17 variables in our dataset\n- There are some missing values in job, education, contact, poutcome (they have \"unknown\" value). we can see these missing values in 10 rows shown above. to find all missing values, we need further exploration.","metadata":{}},{"cell_type":"code","source":"df.columns","metadata":{"execution":{"iopub.status.busy":"2024-07-23T00:39:27.730591Z","iopub.execute_input":"2024-07-23T00:39:27.731086Z","iopub.status.idle":"2024-07-23T00:39:27.740357Z","shell.execute_reply.started":"2024-07-23T00:39:27.731023Z","shell.execute_reply":"2024-07-23T00:39:27.738935Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df.info()","metadata":{"execution":{"iopub.status.busy":"2024-07-23T00:39:27.742466Z","iopub.execute_input":"2024-07-23T00:39:27.742824Z","iopub.status.idle":"2024-07-23T00:39:27.77867Z","shell.execute_reply.started":"2024-07-23T00:39:27.742797Z","shell.execute_reply":"2024-07-23T00:39:27.777494Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"- we can see that there are 10 categorical features and 7 numeric features.\n- we can see that there is no null values in any column but as said before, there exists some missing values in some columns.","metadata":{}},{"cell_type":"code","source":"df.nunique()","metadata":{"execution":{"iopub.status.busy":"2024-07-23T00:39:27.781925Z","iopub.execute_input":"2024-07-23T00:39:27.782435Z","iopub.status.idle":"2024-07-23T00:39:27.823459Z","shell.execute_reply.started":"2024-07-23T00:39:27.782382Z","shell.execute_reply":"2024-07-23T00:39:27.822194Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"**Descriptive statistics of numeric columns**","metadata":{}},{"cell_type":"code","source":"df.describe()","metadata":{"execution":{"iopub.status.busy":"2024-07-23T00:39:27.824913Z","iopub.execute_input":"2024-07-23T00:39:27.825379Z","iopub.status.idle":"2024-07-23T00:39:27.86721Z","shell.execute_reply.started":"2024-07-23T00:39:27.825339Z","shell.execute_reply":"2024-07-23T00:39:27.865841Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"**Descriptive statistics of categorical columns**","metadata":{}},{"cell_type":"code","source":"df.describe(include = [\"object\"])","metadata":{"execution":{"iopub.status.busy":"2024-07-23T00:39:27.868664Z","iopub.execute_input":"2024-07-23T00:39:27.869013Z","iopub.status.idle":"2024-07-23T00:39:27.955436Z","shell.execute_reply.started":"2024-07-23T00:39:27.868983Z","shell.execute_reply":"2024-07-23T00:39:27.954151Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"def dist_box(data):\n    Name=data.name.upper()\n    fig,(ax_box,ax_dis)  =plt.subplots(2,1,gridspec_kw = {\"height_ratios\": (.25, .75)},figsize=(8, 5))\n    mean=data.mean()\n    median=data.median()\n    mode=data.mode().tolist()[0]\n    fig.suptitle(\"SPREAD OF DATA FOR \"+ Name  , fontsize=18, fontweight='bold')\n    sns.boxplot(x=data,showmeans=True, orient='h',color=\"violet\",ax=ax_box)\n    ax_box.set(xlabel='')\n    sns.distplot(data,kde=False,color='blue',ax=ax_dis)\n    ax_dis.axvline(mean, color='r', linestyle='--',linewidth=2)\n    ax_dis.axvline(median, color='g', linestyle='-',linewidth=2)\n    ax_dis.axvline(mode, color='y', linestyle='-',linewidth=2)\n    plt.legend({'Mean':mean,'Median':median,'Mode':mode})","metadata":{"execution":{"iopub.status.busy":"2024-07-23T00:39:27.956771Z","iopub.execute_input":"2024-07-23T00:39:27.957197Z","iopub.status.idle":"2024-07-23T00:39:27.966172Z","shell.execute_reply.started":"2024-07-23T00:39:27.957162Z","shell.execute_reply":"2024-07-23T00:39:27.965059Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"list_col=  df.select_dtypes([np.number]).columns\nfor i in range(len(list_col)):\n    dist_box(df[list_col[i]])","metadata":{"execution":{"iopub.status.busy":"2024-07-23T00:39:27.967771Z","iopub.execute_input":"2024-07-23T00:39:27.968213Z","iopub.status.idle":"2024-07-23T00:39:31.738006Z","shell.execute_reply.started":"2024-07-23T00:39:27.968177Z","shell.execute_reply":"2024-07-23T00:39:31.736603Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"**Age column**","metadata":{}},{"cell_type":"markdown","source":"- minimum of customer age is 18 and maximum is 95 according to df.describe().\n- so to have count of each age the bins argument should be 95-18+1.\n- it is obvious that most of the customers are aged between 25 to 60. \n- according to the boxplot the ages above 70 are considered outliers. \n- the last histogram is the histogram of age ignoring outliers.","metadata":{}},{"cell_type":"code","source":"plt.figure(figsize=(15, 6))\n\nplt.subplot(1, 2, 1)\nsns.histplot(data=df, x='age', bins=95-18+1, hue='y', multiple='stack')\nplt.title('Age Distribution by Subscription Status (Histogram)')\nplt.xlabel('Age')\nplt.ylabel('Count')\n\nplt.subplot(1, 2, 2)\nsns.boxplot(data=df, x='y', y='age')\nplt.title('Age Distribution by Subscription Status (Boxplot)')\nplt.xlabel('Subscription Status')\nplt.ylabel('Age')\n\nplt.tight_layout()\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-07-23T00:39:31.742951Z","iopub.execute_input":"2024-07-23T00:39:31.743367Z","iopub.status.idle":"2024-07-23T00:39:32.999054Z","shell.execute_reply.started":"2024-07-23T00:39:31.743333Z","shell.execute_reply":"2024-07-23T00:39:32.997953Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"**job column**","metadata":{}},{"cell_type":"markdown","source":"- blue-collar has the maximum count.\n- there is an \"unknown\" category for jobs which can be considered as missing value and has the minumum count. \n- following \"unknown\", the job category \"student\" ranks second with the least count.","metadata":{}},{"cell_type":"code","source":"plt.figure(figsize=(15, 6))\nsns.countplot(data=df, x=\"job\", hue=\"y\", palette='Set2')\nplt.xticks(rotation=90)\nplt.tight_layout()\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-07-23T00:39:33.000309Z","iopub.execute_input":"2024-07-23T00:39:33.000664Z","iopub.status.idle":"2024-07-23T00:39:33.483038Z","shell.execute_reply.started":"2024-07-23T00:39:33.000635Z","shell.execute_reply":"2024-07-23T00:39:33.481799Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"**marital column**","metadata":{}},{"cell_type":"markdown","source":"- married has the maximum count, followed by single and divorced consequetively.","metadata":{}},{"cell_type":"code","source":"plt.figure(figsize=(15, 6))\nsns.countplot(data=df, x=\"marital\", hue=\"y\", palette='Set2')\nplt.xticks(rotation=90)\nplt.tight_layout()\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-07-23T00:39:33.48484Z","iopub.execute_input":"2024-07-23T00:39:33.485313Z","iopub.status.idle":"2024-07-23T00:39:33.79251Z","shell.execute_reply.started":"2024-07-23T00:39:33.485273Z","shell.execute_reply":"2024-07-23T00:39:33.79099Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"**education column**","metadata":{}},{"cell_type":"markdown","source":"- secondary has the maximum count.\n- there is an \"unknown\" category for education which can be considered as missing value and has the minumum count. \n- following \"unknown\", the education category \"primary\" ranks second with the least count. ","metadata":{}},{"cell_type":"code","source":"plt.figure(figsize=(15, 6))\nsns.countplot(data=df, x=\"education\", hue=\"y\", palette='Set2')\nplt.xticks(rotation=90)\nplt.tight_layout()\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-07-23T00:39:33.793856Z","iopub.execute_input":"2024-07-23T00:39:33.794226Z","iopub.status.idle":"2024-07-23T00:39:34.132046Z","shell.execute_reply.started":"2024-07-23T00:39:33.794195Z","shell.execute_reply":"2024-07-23T00:39:34.130961Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"**default column**","metadata":{}},{"cell_type":"markdown","source":"- this column shows whether the customer has credit in default or not. \n- it is obvious that most of the customers have no default credits. ","metadata":{}},{"cell_type":"code","source":"plt.figure(figsize=(15, 6))\nsns.countplot(data=df, x=\"default\", hue=\"y\", palette='Set2')\nplt.xticks(rotation=90)\nplt.tight_layout()\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-07-23T00:39:34.133483Z","iopub.execute_input":"2024-07-23T00:39:34.134165Z","iopub.status.idle":"2024-07-23T00:39:34.503027Z","shell.execute_reply.started":"2024-07-23T00:39:34.134122Z","shell.execute_reply":"2024-07-23T00:39:34.50191Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"**balance column**","metadata":{}},{"cell_type":"markdown","source":"- this column indicates the average yearly balance for each customer.\n- according to descriptive statistics of this column printed above, the minimum is -8019, maximum is 102127, mean is almost 1362 and the std is 3044. these statistical parameters show that this column has variety of values and alot of outliers. \n- according to histogram and boxplot below, we can see frequency of the values and find the outliers. \n- the last plot is the histogram of balance column after ignoring the outliers shown in the boxplot. ","metadata":{}},{"cell_type":"code","source":"plt.figure(figsize=(15, 6))\n\nplt.subplot(1, 2, 1)\nsns.histplot(data=df, x='balance', bins=95-18+1, hue='y', multiple='stack')\nplt.title('balance Distribution by Subscription Status (Histogram)')\nplt.xlabel('balance')\nplt.ylabel('Count')\n\nplt.subplot(1, 2, 2)\nsns.boxplot(data=df, x='y', y='balance')\nplt.title('balance Distribution by Subscription Status (Boxplot)')\nplt.xlabel('Subscription Status')\nplt.ylabel('balance')\n\nplt.tight_layout()\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-07-23T00:39:34.504382Z","iopub.execute_input":"2024-07-23T00:39:34.504691Z","iopub.status.idle":"2024-07-23T00:39:35.397028Z","shell.execute_reply.started":"2024-07-23T00:39:34.504666Z","shell.execute_reply":"2024-07-23T00:39:35.395643Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# balance_data = df[\"balance\"]\n\n# Q1 = np.percentile(balance_data, 25)\n# Q3 = np.percentile(balance_data, 75)\n\n# IQR = Q3 - Q1\n\n# lower_whisker = Q1 - 1.5 * IQR\n# upper_whisker = Q3 + 1.5 * IQR\n\n# print(\"Lower whisker:\", lower_whisker)\n# print(\"Upper whisker:\", upper_whisker)","metadata":{"execution":{"iopub.status.busy":"2024-07-23T00:39:35.398411Z","iopub.execute_input":"2024-07-23T00:39:35.399121Z","iopub.status.idle":"2024-07-23T00:39:35.404503Z","shell.execute_reply.started":"2024-07-23T00:39:35.399063Z","shell.execute_reply":"2024-07-23T00:39:35.40317Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# sns.histplot(df[\"balance\"][(df[\"balance\"] >= -1962) & (df[\"balance\"] <= 3462)])\n# plt.show()","metadata":{"execution":{"iopub.status.busy":"2024-07-23T00:39:35.405683Z","iopub.execute_input":"2024-07-23T00:39:35.406011Z","iopub.status.idle":"2024-07-23T00:39:35.415846Z","shell.execute_reply.started":"2024-07-23T00:39:35.405983Z","shell.execute_reply":"2024-07-23T00:39:35.414716Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"**housing column**","metadata":{}},{"cell_type":"markdown","source":"- this column shows if a customer has a housing loan or not. \n- we can see that the proportion of people having a housing loan is more than others (55.6% vs 44.4%).","metadata":{}},{"cell_type":"code","source":"sns.countplot(df , x = \"housing\")\nplt.xticks(rotation = 90)\nplt.show()\n\nplt.figure(figsize=(15, 6))\nsns.countplot(data=df, x=\"housing\", hue=\"y\", palette='Set2')\nplt.xticks(rotation=90)\nplt.tight_layout()\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-07-23T00:39:35.417539Z","iopub.execute_input":"2024-07-23T00:39:35.418421Z","iopub.status.idle":"2024-07-23T00:39:35.855894Z","shell.execute_reply.started":"2024-07-23T00:39:35.418388Z","shell.execute_reply":"2024-07-23T00:39:35.854686Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"housing_counts = df['housing'].value_counts()\nplt.figure(figsize = (6,6))\nplt.pie(housing_counts, labels=housing_counts.index, autopct='%1.1f%%', startangle=45)\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-07-23T00:39:35.857508Z","iopub.execute_input":"2024-07-23T00:39:35.857874Z","iopub.status.idle":"2024-07-23T00:39:35.988928Z","shell.execute_reply.started":"2024-07-23T00:39:35.857844Z","shell.execute_reply":"2024-07-23T00:39:35.98719Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"**loan column**","metadata":{}},{"cell_type":"markdown","source":"- this column shows if a customer has a personal loan or not. \n- we can see that the proportion of people not having a housing loan is more than others. (almost 84% vs 16%)","metadata":{}},{"cell_type":"code","source":"plt.figure(figsize=(15, 6))\nsns.countplot(data=df, x=\"loan\", hue=\"y\", palette='Set2')\nplt.xticks(rotation=90)\nplt.tight_layout()\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-07-23T00:39:35.991205Z","iopub.execute_input":"2024-07-23T00:39:35.99214Z","iopub.status.idle":"2024-07-23T00:39:36.368539Z","shell.execute_reply.started":"2024-07-23T00:39:35.99207Z","shell.execute_reply":"2024-07-23T00:39:36.367329Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df['loan'].value_counts(normalize=True) * 100","metadata":{"execution":{"iopub.status.busy":"2024-07-23T00:39:36.369793Z","iopub.execute_input":"2024-07-23T00:39:36.370139Z","iopub.status.idle":"2024-07-23T00:39:36.382537Z","shell.execute_reply.started":"2024-07-23T00:39:36.370098Z","shell.execute_reply":"2024-07-23T00:39:36.381178Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"**contact column**","metadata":{}},{"cell_type":"markdown","source":"- this column shows contact communication type\n- we can see there are some \"unknown\" values which can be considered as missing values. \n- most of the customers' contact type is cellular.","metadata":{}},{"cell_type":"code","source":"plt.figure(figsize=(15, 6))\nsns.countplot(data=df, x=\"contact\", hue=\"y\", palette='Set2')\nplt.xticks(rotation=90)\nplt.tight_layout()\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-07-23T00:39:36.383986Z","iopub.execute_input":"2024-07-23T00:39:36.384623Z","iopub.status.idle":"2024-07-23T00:39:36.689729Z","shell.execute_reply.started":"2024-07-23T00:39:36.384583Z","shell.execute_reply":"2024-07-23T00:39:36.688204Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"**day column**","metadata":{}},{"cell_type":"markdown","source":"- this column shows last contact day of the month \n- there seems no specific pattern in this column. ","metadata":{}},{"cell_type":"code","source":"plt.figure(figsize=(15, 6))\n\nplt.subplot(1, 2, 1)\nsns.histplot(data=df, x='day', bins=95-18+1, hue='y', multiple='stack')\nplt.title('day Distribution by Subscription Status (Histogram)')\nplt.xlabel('day')\nplt.ylabel('Count')\n\nplt.subplot(1, 2, 2)\nsns.boxplot(data=df, x='y', y='day')\nplt.title('day Distribution by Subscription Status (Boxplot)')\nplt.xlabel('Subscription Status')\nplt.ylabel('day')\n\nplt.tight_layout()\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-07-23T00:39:36.691836Z","iopub.execute_input":"2024-07-23T00:39:36.692944Z","iopub.status.idle":"2024-07-23T00:39:37.594838Z","shell.execute_reply.started":"2024-07-23T00:39:36.692907Z","shell.execute_reply":"2024-07-23T00:39:37.593662Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"**month column**","metadata":{}},{"cell_type":"markdown","source":"- this column shows last contact month of year. \n- we can see that May has the most frequency. \n- December has the least frequency. ","metadata":{}},{"cell_type":"code","source":"plt.figure(figsize=(15, 6))\nsns.countplot(data=df, x=\"month\", hue=\"y\", palette='Set2')\nplt.xticks(rotation=90)\nplt.tight_layout()\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-07-23T00:39:37.602935Z","iopub.execute_input":"2024-07-23T00:39:37.603722Z","iopub.status.idle":"2024-07-23T00:39:38.001323Z","shell.execute_reply.started":"2024-07-23T00:39:37.603689Z","shell.execute_reply":"2024-07-23T00:39:38.00017Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"**duration column**","metadata":{}},{"cell_type":"markdown","source":"- this column indicates the last contact duration for a customer. \n- according to descriptive statistics of this column printed above, the minimum is 0, maximum is 4918, mean is almost 258 and the std is 257. these statistical parameters show that this column has variety of values and alot of outliers. \n- according to histogram and boxplot below, we can see frequency of the values and find the outliers. \n- the last plot is the histogram of duration column after ignoring the outliers shown in the boxplot. ","metadata":{}},{"cell_type":"code","source":"plt.figure(figsize=(15, 6))\n\nplt.subplot(1, 2, 1)\nsns.histplot(data=df, x='duration', bins=95-18+1, hue='y', multiple='stack')\nplt.title('duration Distribution by Subscription Status (Histogram)')\nplt.xlabel('duration')\nplt.ylabel('Count')\n\nplt.subplot(1, 2, 2)\nsns.boxplot(data=df, x='y', y='duration')\nplt.title('duration Distribution by Subscription Status (Boxplot)')\nplt.xlabel('Subscription Status')\nplt.ylabel('duration')\n\nplt.tight_layout()\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-07-23T00:39:38.003205Z","iopub.execute_input":"2024-07-23T00:39:38.003758Z","iopub.status.idle":"2024-07-23T00:39:39.284481Z","shell.execute_reply.started":"2024-07-23T00:39:38.003727Z","shell.execute_reply":"2024-07-23T00:39:39.283382Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# duration_data = df[\"duration\"]\n\n# Q1 = np.percentile(duration_data, 25)\n# Q3 = np.percentile(duration_data, 75)\n\n# IQR = Q3 - Q1\n# upper_whisker = Q3 + 1.5 * IQR\n\n# print(\"Upper whisker:\", upper_whisker)","metadata":{"execution":{"iopub.status.busy":"2024-07-23T00:39:39.285706Z","iopub.execute_input":"2024-07-23T00:39:39.286013Z","iopub.status.idle":"2024-07-23T00:39:39.290973Z","shell.execute_reply.started":"2024-07-23T00:39:39.285987Z","shell.execute_reply":"2024-07-23T00:39:39.289765Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# sns.histplot(df[\"duration\"][df[\"duration\"] <= 643])\n# plt.show()","metadata":{"execution":{"iopub.status.busy":"2024-07-23T00:39:39.292329Z","iopub.execute_input":"2024-07-23T00:39:39.292699Z","iopub.status.idle":"2024-07-23T00:39:39.303666Z","shell.execute_reply.started":"2024-07-23T00:39:39.29267Z","shell.execute_reply":"2024-07-23T00:39:39.302385Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"**campaign column**","metadata":{}},{"cell_type":"markdown","source":"- this column shows number of contacts performed during this campaign and for this customer.\n- according to descriptive statistics of this column printed above, the minimum is 1, maximum is 63, mean is almost 2.76 and the std is almost 3.\n- according to histogram and boxplot below, we can see frequency of the values and find the outliers. \n- the last plot is the histogram of duration column after ignoring the outliers shown in the boxplot. ","metadata":{}},{"cell_type":"code","source":"plt.figure(figsize=(15, 6))\n\nplt.subplot(1, 2, 1)\nsns.histplot(data=df, x='campaign', bins=95-18+1, hue='y', multiple='stack')\nplt.title('campaign Distribution by Subscription Status (Histogram)')\nplt.xlabel('campaign')\nplt.ylabel('Count')\n\nplt.subplot(1, 2, 2)\nsns.boxplot(data=df, x='y', y='campaign')\nplt.title('campaign Distribution by Subscription Status (Boxplot)')\nplt.xlabel('Subscription Status')\nplt.ylabel('campaign')\n\nplt.tight_layout()\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-07-23T00:39:39.30496Z","iopub.execute_input":"2024-07-23T00:39:39.305334Z","iopub.status.idle":"2024-07-23T00:39:40.257886Z","shell.execute_reply.started":"2024-07-23T00:39:39.305304Z","shell.execute_reply":"2024-07-23T00:39:40.256694Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"sns.boxplot(df[\"campaign\"] , orient = \"h\")\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-07-23T00:39:40.259446Z","iopub.execute_input":"2024-07-23T00:39:40.259884Z","iopub.status.idle":"2024-07-23T00:39:40.445836Z","shell.execute_reply.started":"2024-07-23T00:39:40.259845Z","shell.execute_reply":"2024-07-23T00:39:40.444715Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# duration_data = df[\"campaign\"]\n\n# Q1 = np.percentile(duration_data, 25)\n# Q3 = np.percentile(duration_data, 75)\n\n# IQR = Q3 - Q1\n# upper_whisker = Q3 + 1.5 * IQR\n\n# print(\"Upper whisker:\", upper_whisker)","metadata":{"execution":{"iopub.status.busy":"2024-07-23T00:39:40.447421Z","iopub.execute_input":"2024-07-23T00:39:40.447843Z","iopub.status.idle":"2024-07-23T00:39:40.453042Z","shell.execute_reply.started":"2024-07-23T00:39:40.447803Z","shell.execute_reply":"2024-07-23T00:39:40.451902Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# sns.histplot(df[\"campaign\"][df[\"campaign\"] <= 6] , bins=6)\n# plt.show()","metadata":{"execution":{"iopub.status.busy":"2024-07-23T00:39:40.454453Z","iopub.execute_input":"2024-07-23T00:39:40.454797Z","iopub.status.idle":"2024-07-23T00:39:40.471468Z","shell.execute_reply.started":"2024-07-23T00:39:40.454769Z","shell.execute_reply":"2024-07-23T00:39:40.470307Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"**pdays column**","metadata":{}},{"cell_type":"markdown","source":"- this column shows the number of days that passed by after the client was last contacted from a previous campaign.\n- -1 means client was not previously contacted.","metadata":{}},{"cell_type":"code","source":"plt.figure(figsize=(15, 6))\n\nplt.subplot(1, 2, 1)\nsns.histplot(data=df, x='pdays', bins=95-18+1, hue='y', multiple='stack')\nplt.title('pdays Distribution by Subscription Status (Histogram)')\nplt.xlabel('pdays')\nplt.ylabel('Count')\n\nplt.subplot(1, 2, 2)\nsns.boxplot(data=df, x='y', y='pdays')\nplt.title('pdays Distribution by Subscription Status (Boxplot)')\nplt.xlabel('Subscription Status')\nplt.ylabel('pdays')\n\nplt.tight_layout()\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-07-23T00:39:40.472885Z","iopub.execute_input":"2024-07-23T00:39:40.473257Z","iopub.status.idle":"2024-07-23T00:39:41.522444Z","shell.execute_reply.started":"2024-07-23T00:39:40.473223Z","shell.execute_reply":"2024-07-23T00:39:41.52119Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# positive_pdays_count = df[\"pdays\"][df[\"pdays\"] > -1].count()\n# negative_pdays_count = df[\"pdays\"][df[\"pdays\"] == -1].count()\n\n# labels = ['previously contacted', \"not previously contacted\"]\n# counts = [positive_pdays_count, negative_pdays_count]\n\n# plt.figure(figsize=(8, 6))\n# plt.pie(counts, labels=labels, autopct='%1.1f%%')\n# plt.show()","metadata":{"execution":{"iopub.status.busy":"2024-07-23T00:39:41.523902Z","iopub.execute_input":"2024-07-23T00:39:41.524468Z","iopub.status.idle":"2024-07-23T00:39:41.530856Z","shell.execute_reply.started":"2024-07-23T00:39:41.524423Z","shell.execute_reply":"2024-07-23T00:39:41.529594Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# sns.boxplot(df[\"pdays\"] , orient = \"h\")\n# plt.show()","metadata":{"execution":{"iopub.status.busy":"2024-07-23T00:39:41.532323Z","iopub.execute_input":"2024-07-23T00:39:41.532815Z","iopub.status.idle":"2024-07-23T00:39:41.542292Z","shell.execute_reply.started":"2024-07-23T00:39:41.532775Z","shell.execute_reply":"2024-07-23T00:39:41.540991Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# pdays_data = df[\"pdays\"]\n\n# Q1 = np.percentile(pdays_data, 25)\n# Q3 = np.percentile(pdays_data, 75)\n\n# IQR = Q3 - Q1\n\n# lower_whisker = Q1 - 1.5 * IQR\n# upper_whisker = Q3 + 1.5 * IQR\n\n# print(\"Q1:\", Q1)\n# print(\"Q3:\", Q3)\n# print(\"IQR:\", IQR)\n# print(\"Lower whisker:\", lower_whisker)\n# print(\"Upper whisker:\", upper_whisker)","metadata":{"execution":{"iopub.status.busy":"2024-07-23T00:39:41.544002Z","iopub.execute_input":"2024-07-23T00:39:41.544467Z","iopub.status.idle":"2024-07-23T00:39:41.553929Z","shell.execute_reply.started":"2024-07-23T00:39:41.544426Z","shell.execute_reply":"2024-07-23T00:39:41.5526Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# sns.boxplot(x = df[\"pdays\"][df[\"pdays\"] > -1] , orient=\"h\")\n# plt.show()","metadata":{"execution":{"iopub.status.busy":"2024-07-23T00:39:41.555533Z","iopub.execute_input":"2024-07-23T00:39:41.556067Z","iopub.status.idle":"2024-07-23T00:39:41.56663Z","shell.execute_reply.started":"2024-07-23T00:39:41.556038Z","shell.execute_reply":"2024-07-23T00:39:41.565344Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# new_pdays_data = df[\"pdays\"][df[\"pdays\"] > -1]\n\n# Q1 = np.percentile(new_pdays_data, 25)\n# Q3 = np.percentile(new_pdays_data, 75)\n\n# IQR = Q3 - Q1\n\n# upper_whisker = Q3 + 1.5 * IQR\n\n# print(\"Upper whisker:\", upper_whisker)","metadata":{"execution":{"iopub.status.busy":"2024-07-23T00:39:41.567945Z","iopub.execute_input":"2024-07-23T00:39:41.568373Z","iopub.status.idle":"2024-07-23T00:39:41.578165Z","shell.execute_reply.started":"2024-07-23T00:39:41.568336Z","shell.execute_reply":"2024-07-23T00:39:41.576872Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# sns.histplot(df[\"pdays\"][(df[\"pdays\"] > -1) &(df[\"pdays\"] <= 618 )] , bins = 619)\n# plt.show()","metadata":{"execution":{"iopub.status.busy":"2024-07-23T00:39:41.5798Z","iopub.execute_input":"2024-07-23T00:39:41.580224Z","iopub.status.idle":"2024-07-23T00:39:41.590768Z","shell.execute_reply.started":"2024-07-23T00:39:41.580185Z","shell.execute_reply":"2024-07-23T00:39:41.589432Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"**previous column**","metadata":{}},{"cell_type":"markdown","source":"- this column shows the number of contacts performed before this campaign and for this client","metadata":{}},{"cell_type":"code","source":"plt.figure(figsize=(15, 6))\n\nplt.subplot(1, 2, 1)\nsns.histplot(data=df, x='previous', bins=95-18+1, hue='y', multiple='stack')\nplt.title('previous Distribution by Subscription Status (Histogram)')\nplt.xlabel('previous')\nplt.ylabel('Count')\n\nplt.subplot(1, 2, 2)\nsns.boxplot(data=df, x='y', y='previous')\nplt.title('previous Distribution by Subscription Status (Boxplot)')\nplt.xlabel('Subscription Status')\nplt.ylabel('previous')\n\nplt.tight_layout()\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-07-23T00:39:41.592213Z","iopub.execute_input":"2024-07-23T00:39:41.592581Z","iopub.status.idle":"2024-07-23T00:39:42.757433Z","shell.execute_reply.started":"2024-07-23T00:39:41.592551Z","shell.execute_reply":"2024-07-23T00:39:42.756038Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# positive_previous_count = df[\"previous\"][df[\"previous\"] > 0].count()\n# zero_previous_count = df[\"previous\"][df[\"previous\"] == 0].count()\n\n# labels = ['previously contacted', \"not previously contacted\"]\n# counts = [positive_previous_count, zero_previous_count]\n\n# plt.figure(figsize=(8, 6))\n# plt.pie(counts, labels=labels, autopct='%1.1f%%')\n# plt.show()","metadata":{"execution":{"iopub.status.busy":"2024-07-23T00:39:42.758816Z","iopub.execute_input":"2024-07-23T00:39:42.75918Z","iopub.status.idle":"2024-07-23T00:39:42.764464Z","shell.execute_reply.started":"2024-07-23T00:39:42.759147Z","shell.execute_reply":"2024-07-23T00:39:42.763165Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# sns.boxplot(x = df[\"previous\"][df[\"previous\"] > 0] , orient=\"h\")\n# plt.show()","metadata":{"execution":{"iopub.status.busy":"2024-07-23T00:39:42.765806Z","iopub.execute_input":"2024-07-23T00:39:42.766204Z","iopub.status.idle":"2024-07-23T00:39:42.778145Z","shell.execute_reply.started":"2024-07-23T00:39:42.766174Z","shell.execute_reply":"2024-07-23T00:39:42.776923Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# new_previous_data = df[\"previous\"][df[\"previous\"] > 0]\n\n# Q1 = np.percentile(new_previous_data, 25)\n# Q3 = np.percentile(new_previous_data, 75)\n\n# IQR = Q3 - Q1\n\n# upper_whisker = Q3 + 1.5 * IQR\n\n# print(\"Upper whisker:\", upper_whisker)","metadata":{"execution":{"iopub.status.busy":"2024-07-23T00:39:42.779852Z","iopub.execute_input":"2024-07-23T00:39:42.780277Z","iopub.status.idle":"2024-07-23T00:39:42.792887Z","shell.execute_reply.started":"2024-07-23T00:39:42.780244Z","shell.execute_reply":"2024-07-23T00:39:42.791424Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# sns.histplot(df[\"previous\"][(df[\"previous\"] > 0) &(df[\"previous\"] <= 8 )] , bins = 8)\n# plt.show()","metadata":{"execution":{"iopub.status.busy":"2024-07-23T00:39:42.794352Z","iopub.execute_input":"2024-07-23T00:39:42.794753Z","iopub.status.idle":"2024-07-23T00:39:42.805768Z","shell.execute_reply.started":"2024-07-23T00:39:42.794722Z","shell.execute_reply":"2024-07-23T00:39:42.804557Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"**poutcome column**","metadata":{}},{"cell_type":"markdown","source":"- this column shows the outcome of the previous marketing campaign\n- \"unknown\" means that majority (81.74%) of the people did not know about the previous marketing campaign. so this \"unknown\" cannot be considered as missing value.","metadata":{}},{"cell_type":"code","source":"plt.figure(figsize=(15, 6))\nsns.countplot(data=df, x=\"poutcome\", hue=\"y\", palette='Set2')\nplt.xticks(rotation=90)\nplt.tight_layout()\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-07-23T00:39:42.807479Z","iopub.execute_input":"2024-07-23T00:39:42.807832Z","iopub.status.idle":"2024-07-23T00:39:43.128338Z","shell.execute_reply.started":"2024-07-23T00:39:42.807803Z","shell.execute_reply":"2024-07-23T00:39:43.126973Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df[\"poutcome\"].value_counts(normalize = True)*100","metadata":{"execution":{"iopub.status.busy":"2024-07-23T00:39:43.130324Z","iopub.execute_input":"2024-07-23T00:39:43.130786Z","iopub.status.idle":"2024-07-23T00:39:43.143326Z","shell.execute_reply.started":"2024-07-23T00:39:43.130738Z","shell.execute_reply":"2024-07-23T00:39:43.142014Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"poutcome_counts = df['poutcome'].value_counts()\nplt.figure(figsize = (6,6))\nplt.pie(poutcome_counts, labels=poutcome_counts.index, autopct='%1.1f%%')\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-07-23T00:39:43.145049Z","iopub.execute_input":"2024-07-23T00:39:43.145519Z","iopub.status.idle":"2024-07-23T00:39:43.307937Z","shell.execute_reply.started":"2024-07-23T00:39:43.145486Z","shell.execute_reply":"2024-07-23T00:39:43.306316Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"**y column**","metadata":{}},{"cell_type":"markdown","source":"- this column shows whether the client subscribed a term deposit or not.\n- The target variable is **highly** imbalanced.","metadata":{}},{"cell_type":"code","source":"sns.countplot(df , x = \"y\")\nplt.xticks(rotation = 90)\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-07-23T00:39:43.309991Z","iopub.execute_input":"2024-07-23T00:39:43.311222Z","iopub.status.idle":"2024-07-23T00:39:43.765883Z","shell.execute_reply.started":"2024-07-23T00:39:43.311172Z","shell.execute_reply":"2024-07-23T00:39:43.76481Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df[\"y\"].value_counts()","metadata":{"execution":{"iopub.status.busy":"2024-07-23T00:39:43.767099Z","iopub.execute_input":"2024-07-23T00:39:43.767536Z","iopub.status.idle":"2024-07-23T00:39:43.779971Z","shell.execute_reply.started":"2024-07-23T00:39:43.767501Z","shell.execute_reply":"2024-07-23T00:39:43.778676Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"<h2> Preprocessing </h2>","metadata":{}},{"cell_type":"markdown","source":"imports","metadata":{}},{"cell_type":"code","source":"from sklearn.preprocessing import MinMaxScaler\nfrom sklearn.model_selection import train_test_split\nfrom imblearn.over_sampling import SMOTE","metadata":{"execution":{"iopub.status.busy":"2024-07-23T00:39:43.781445Z","iopub.execute_input":"2024-07-23T00:39:43.781875Z","iopub.status.idle":"2024-07-23T00:39:43.791448Z","shell.execute_reply.started":"2024-07-23T00:39:43.781834Z","shell.execute_reply":"2024-07-23T00:39:43.789896Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"<h3> missing value handling </h3>","metadata":{}},{"cell_type":"markdown","source":"- handling \"unknown\" values mentioned before by replacing them with mode of each column.","metadata":{}},{"cell_type":"code","source":"df[\"job\"].replace([\"unknown\"],df[\"job\"].mode(),inplace = True)\ndf[\"education\"].replace([\"unknown\"],df[\"education\"].mode(),inplace = True)\ndf[\"contact\"].replace([\"unknown\"],df[\"contact\"].mode(),inplace = True)","metadata":{"execution":{"iopub.status.busy":"2024-07-23T00:39:43.793347Z","iopub.execute_input":"2024-07-23T00:39:43.793745Z","iopub.status.idle":"2024-07-23T00:39:43.836428Z","shell.execute_reply.started":"2024-07-23T00:39:43.793705Z","shell.execute_reply":"2024-07-23T00:39:43.834988Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df['y'] = df['y'].replace({\"yes\": 1 , \"no\": 0})","metadata":{"execution":{"iopub.status.busy":"2024-07-23T00:39:43.837981Z","iopub.execute_input":"2024-07-23T00:39:43.838463Z","iopub.status.idle":"2024-07-23T00:39:43.862832Z","shell.execute_reply.started":"2024-07-23T00:39:43.838422Z","shell.execute_reply":"2024-07-23T00:39:43.861696Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"numeric_df = df.select_dtypes(include=['int64', 'float64'])\ncorrelation_matrix = numeric_df.corr()\ncorrelation_matrix","metadata":{"execution":{"iopub.status.busy":"2024-07-23T00:39:43.864231Z","iopub.execute_input":"2024-07-23T00:39:43.864586Z","iopub.status.idle":"2024-07-23T00:39:43.896804Z","shell.execute_reply.started":"2024-07-23T00:39:43.864558Z","shell.execute_reply":"2024-07-23T00:39:43.895126Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"plt.figure(figsize=(14, 12))\nsns.heatmap(correlation_matrix, annot=True, cmap='coolwarm', linewidths=0.5)\nplt.title('Heatmap of Numeric Features Correlation')\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-07-23T00:39:43.898405Z","iopub.execute_input":"2024-07-23T00:39:43.898747Z","iopub.status.idle":"2024-07-23T00:39:44.47064Z","shell.execute_reply.started":"2024-07-23T00:39:43.89872Z","shell.execute_reply":"2024-07-23T00:39:44.469305Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"<h3> encoding</h3>","metadata":{}},{"cell_type":"markdown","source":" <h4>convert yes/no to 1/0</h4>","metadata":{}},{"cell_type":"code","source":"df['default'] = df['default'].replace({\"yes\": 1 , \"no\": 0})\ndf['housing'] = df['housing'].replace({\"yes\": 1 , \"no\": 0})\ndf['loan'] = df['loan'].replace({\"yes\": 1 , \"no\": 0})","metadata":{"execution":{"iopub.status.busy":"2024-07-23T00:39:44.472068Z","iopub.execute_input":"2024-07-23T00:39:44.472504Z","iopub.status.idle":"2024-07-23T00:39:44.54253Z","shell.execute_reply.started":"2024-07-23T00:39:44.472467Z","shell.execute_reply":"2024-07-23T00:39:44.541337Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":" <h4>convert previous to 1/0 and dropping pdays</h4>","metadata":{}},{"cell_type":"code","source":"df['previous'] = df['previous'].apply(lambda x: 0 if x == 0 else 1)\ndf.drop(columns=['pdays'], inplace=True)","metadata":{"execution":{"iopub.status.busy":"2024-07-23T00:39:44.543858Z","iopub.execute_input":"2024-07-23T00:39:44.544297Z","iopub.status.idle":"2024-07-23T00:39:44.577302Z","shell.execute_reply.started":"2024-07-23T00:39:44.544259Z","shell.execute_reply":"2024-07-23T00:39:44.576019Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"<h4>label encoding of the ordinal categorical features (education and month)</h4>","metadata":{}},{"cell_type":"code","source":"df['education'] = df['education'].replace({\"tertiary\": 2 , \"secondary\": 1 , \"primary\" :0})","metadata":{"execution":{"iopub.status.busy":"2024-07-23T00:39:44.578961Z","iopub.execute_input":"2024-07-23T00:39:44.580009Z","iopub.status.idle":"2024-07-23T00:39:44.608365Z","shell.execute_reply.started":"2024-07-23T00:39:44.579967Z","shell.execute_reply":"2024-07-23T00:39:44.607066Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df['month'] = df['month'].replace({\"jan\": 1, \"feb\": 2, \"mar\" :3,\n                                   \"apr\":4 ,\"may\": 5, \"jun\":6,\n                                   \"jul\":7 , \"aug\":8, \"sep\": 9,\n                                   \"oct\": 10, \"nov\": 11 , \"dec\":12})","metadata":{"execution":{"iopub.status.busy":"2024-07-23T00:39:44.609714Z","iopub.execute_input":"2024-07-23T00:39:44.610047Z","iopub.status.idle":"2024-07-23T00:39:44.685554Z","shell.execute_reply.started":"2024-07-23T00:39:44.61002Z","shell.execute_reply":"2024-07-23T00:39:44.684189Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"<h4>one hot encoding of the remaining categorical features</h4>","metadata":{}},{"cell_type":"code","source":"df = pd.get_dummies(df, columns=[\"job\", \"marital\", \"poutcome\" , \"contact\"]  , drop_first = True , dtype = int )","metadata":{"execution":{"iopub.status.busy":"2024-07-23T00:39:44.687325Z","iopub.execute_input":"2024-07-23T00:39:44.68778Z","iopub.status.idle":"2024-07-23T00:39:44.726559Z","shell.execute_reply.started":"2024-07-23T00:39:44.687747Z","shell.execute_reply":"2024-07-23T00:39:44.725427Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df.head()","metadata":{"scrolled":true,"execution":{"iopub.status.busy":"2024-07-23T00:39:44.727947Z","iopub.execute_input":"2024-07-23T00:39:44.728296Z","iopub.status.idle":"2024-07-23T00:39:44.748009Z","shell.execute_reply.started":"2024-07-23T00:39:44.728267Z","shell.execute_reply":"2024-07-23T00:39:44.7469Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"<h4>outlier handling</h4>","metadata":{}},{"cell_type":"markdown","source":"- using IQR\n- it doesn't improve the model performance","metadata":{}},{"cell_type":"code","source":"# outlier_columns = [\"balance\" , \"duration\" , \"campaign\"]\n# lower_whisker = {\"balance\":-1962 , \"duration\": 0 , \"campaign\":1 }\n# upper_whisker = {\"balance\":3462 , \"duration\":643 , \"campaign\":6 }\n# for col in outlier_columns:\n#     df[col] = np.where(df[col] < lower_whisker[col], lower_whisker[col] , df[col])\n#     df[col] = np.where(df[col] > upper_whisker[col] , upper_whisker[col] , df[col])","metadata":{"execution":{"iopub.status.busy":"2024-07-23T00:39:44.749616Z","iopub.execute_input":"2024-07-23T00:39:44.750046Z","iopub.status.idle":"2024-07-23T00:39:44.760609Z","shell.execute_reply.started":"2024-07-23T00:39:44.750007Z","shell.execute_reply":"2024-07-23T00:39:44.759568Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"<h3>Scaling</h3>","metadata":{}},{"cell_type":"markdown","source":"- use minmax scaler","metadata":{}},{"cell_type":"code","source":"# columns = df.columns \n# scaler = MinMaxScaler()\n# df = scaler.fit_transform(df)\n# df = pd.DataFrame(df , columns=[columns])","metadata":{"execution":{"iopub.status.busy":"2024-07-23T00:39:44.762419Z","iopub.execute_input":"2024-07-23T00:39:44.762862Z","iopub.status.idle":"2024-07-23T00:39:44.773296Z","shell.execute_reply.started":"2024-07-23T00:39:44.762822Z","shell.execute_reply":"2024-07-23T00:39:44.771891Z"},"trusted":true},"execution_count":null,"outputs":[]}]}